import "clojure/protobuf/extensions.proto";

option java_package = "jiraph";
option java_outer_classname = "Test";

message Foo {
  optional int32 foo = 1;
  optional int32 bar = 2;
  optional int32 baz = 3;

  repeated string tags    = 4;
  repeated Item   tag_set = 5 [(set) = true];
  repeated Entry  num_map = 6 [(map) = true];

  optional Foo nested = 7;
}

message Item {
  required string item   = 1;
  required bool   exists = 2 [default = true];
}

message Entry {
  required int32  key = 1;
  required string val = 2;
}

message Edge {
  required string to_id   = 1;
  optional string a       = 2;
  optional string b       = 3;
  optional bool   deleted = 4;
}

message Node {
  optional string id    = 1;
  repeated Edge   edges = 2 [(map_by) = "to_id"];
  optional int32  rev   = 3;
  optional int32  foo   = 4;
  optional string bar   = 5;
  repeated int32  baz   = 6;
}